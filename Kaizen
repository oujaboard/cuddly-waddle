getgenv().MoneyFarmToggled = false
getgenv().Autofarm = false

local Chareee = game:GetService("Players").LocalPlayer.Character
local Mobs = game:GetService("Workspace").Living.Mobs

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Jxereas/UI-Libraries/main/athenic_gui_library.lua", true))()

local window = library:CreateWindow("Kaizen Script by Oujaboard")

local tab = window:CreateTab("Autofarm")

local label = tab:Label("The fuck is a label", {
   BgColor = Color3.fromRGB(20,20,20),
   TextSize = 18,
   TextColor = Color3.fromRGB(255,255,255)
})

label:ChangeText("Kaizen")



local toggle = tab:Toggle("Farm Money (Invis Breaks This)", function(bool)
    getgenv().MoneyFarmToggled = bool
    if bool then
        autoFarmCash()
    end
end)
toggle:SetToggle(false)


_G.Table1 = {}
function UDP(--[[Table1]])
    for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
        table.insert(_G.Table1, v.Name)
    end
end
UDP()
print(unpack(_G.Table1))


local invdrpd = tab:Dropdown("Tool Select (For Autofarm)", {unpack(_G.Table1)}, function(selected)
    selectedTool = selected
    print("Dropdown element selected: "..selected)

 end, true) -- Args(<string> Name, <table?> Options, <function?> Callback, <boolean?> ShowNoneOption)

tab:Button("Refresh Tools (DOESNT WORK YET)", function()
    --[[UpdInvList()
    wait(0.1)
    invdrpd:Refresh(_G.InventoryList,true)]]
end)




local toggle = tab:Toggle("Farm Shroom Quest (Invis Breaks This)", function(bool)
    getgenv().Autofarm = bool
    if bool then
        autoFarmSQ(selectedTool)
    end
end)
toggle:SetToggle(false)


tab:Button("Invisibility (Breaks Autofarms until death)", function()
   local tempPos = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
   task.wait(0.1)
   game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(117.620003, 235.537994, 243.947998, -0.993051589, -3.08575174e-08, -0.117679805, -1.89604723e-08, 1, -1.02216269e-07, 0.117679805, -9.92747644e-08, -0.993051589)
   task.wait(0.5)
   game:GetService("Players").LocalPlayer.Character.LowerTorso.Root:Destroy()
   task.wait(1)
   game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = tempPos
end)




local tab2 = window:CreateTab("Misc")

tab2:Slider("WalkSpeed", 500, function(val)
     while task.wait(0.1) do
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = val
     end
 end)

 tab2:Slider("JumpPower", 500, function(val)
    while task.wait(0.1) do
       game.Players.LocalPlayer.Character.Humanoid.JumpPower = val
    end
end)


--FUNCTIONS

function autoFarmCash()
    spawn(function()
        while getgenv().MoneyFarmToggled == true do
            task.wait(1)
            
            Chareee.HumanoidRootPart.CFrame = CFrame.new(-264.447815, 155.822479, 427.063385, 0.993763745, 6.16412095e-08, 0.111506008, -6.66409576e-08, 1, 4.11113561e-08, -0.111506008, -4.82858411e-08, 0.993763745)
            
            local args = {[1] = "TreeLogSideQuest"}
            
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))
            task.wait(0.2)
            
            local args = {[1] = "TreeLogSideQuest", [2] = "quest_prompt"}
            
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            task.wait(0.2)
            
            local args = {[1] = "TreeLogSideQuest", [2] = "Yes"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))
            task.wait(0.2)
            
            
            Chareee.HumanoidRootPart.CFrame = CFrame.new(380.789185, 156.51001, -320.064056, -0.0318551399, -8.96111096e-09, 0.999492466, -2.18758101e-09, 1, 8.89593998e-09, -0.999492466, -1.90308924e-09, -0.0318551399)
            task.wait(0.2)
            
            
            local args = {[1] = "TreeLogOtherNPC"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))
            task.wait(0.25)
            
            
            local args = {[1] = "TreeLogOtherNPC", [2] = "bring_back"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            task.wait(0.25)
            
            
            local args = {[1] = "TreeLogOtherNPC", [2] = "Okay"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))
            task.wait(0.25)
            
            Chareee.HumanoidRootPart.CFrame = CFrame.new(-264.447815, 155.822479, 427.063385, 0.993763745, 6.16412095e-08, 0.111506008, -6.66409576e-08, 1, 4.11113561e-08, -0.111506008, -4.82858411e-08, 0.993763745)
            task.wait(0.25)
            
            
            local args = {[1] = "TreeLogSideQuest"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))
            task.wait(0.25)
            
            
            local args = {[1] = "TreeLogSideQuest", [2] = "quest_reward"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            task.wait(0.25)
            
            
            local args = {[1] = "TreeLogSideQuest", [2] = "..."}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))
            task.wait(0.25)

            Chareee.HumanoidRootPart.CFrame = CFrame.new(-457.122192, 388.772766, -534.745667, -0.932645202, 3.74172693e-08, 0.360794902, 5.08153413e-08, 1, 2.76484364e-08, -0.360794902, 4.4120096e-08, -0.932645202)
            task.wait(30)
        end
    end)
end

local countingKills = 0

function autoFarmSQ(tool2use)
    spawn(function()
        print(tool2use)
        if getgenv().Autofarm == true then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-340, 146, 330)
            wait(0.1)
            local args = {[1] = "ShroomSideQuest", [2] = "begin"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            wait(0.1)
            local args = {[1] = "ShroomSideQuest", [2] = "Shrooms"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
            local args = {[1] = "ShroomSideQuest", [2] = "Confirm"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
        end
        while getgenv().Autofarm == true do
            task.wait()
            local Chareee = game:GetService("Players").LocalPlayer.Character
            local Mobs = game:GetService("Workspace").Living.Mobs
            local player = game.Players.LocalPlayer.Character.HumanoidRootPart

            for i,v in pairs(Mobs:GetChildren()) do
                if v.Name == "Shroom" and v.Humanoid.Health > 0 and getgenv().Autofarm == true and player then
                    repeat
                        pcall(function()
                            game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[tool2use])
                        end)
                        task.wait()
                        Chareee.HumanoidRootPart.CFrame = v:WaitForChild("HumanoidRootPart",9e99).CFrame + Vector3.new(0,5,0) --* CFrame.new(0,5,0)
                            if v.Humanoid.Health <= 0 then
                                wait(0.1)
                                countingKills = countingKills + 1
                                print(countingKills)     
                                task.wait(0.1)
                                if countingKills == 5 then
                                    getgenv().Autofarm = false
                                    wait(0.1)
                                    Chareee.HumanoidRootPart.CFrame = CFrame.new(-342.406555, 146.021729, 327.200745, 0.978649437, 3.15471804e-09, -0.205536574, -5.27631139e-09, 1, -9.77412995e-09, 0.205536574, 1.06499218e-08, 0.978649437)
                                    local args = {[1] = "ShroomSideQuest"}
                                    game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))                                
                                    wait(0.1)
                                    local args = {[1] = "ShroomSideQuest", [2] = "talk"}
                                    game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))                                
                                    wait(0.1)
                                    local args = {[1] = "ShroomSideQuest", [2] = "Bye"}
                                    game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))                                
                                    wait(0.1)
                                    getgenv().Autofarm = true
                                    countingKills = 0 
                                    print(countingKills)
                                    wait(4)
                                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-340, 146, 330)
                                    wait(0.1)
                                    local args = {[1] = "ShroomSideQuest", [2] = "begin"}
                                    game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
                                    wait(0.1)
                                    local args = {[1] = "ShroomSideQuest", [2] = "Shrooms"}
                                    game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                    wait(0.1)
                                    local args = {[1] = "ShroomSideQuest", [2] = "Confirm"}
                                    game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                    wait(0.1)
                                end
                            else
                                end
                            game:GetService("Players").LocalPlayer.Character[tool2use]:Activate()
                    until v.Humanoid.Health <= 0 or getgenv().Autofarm == false or Chareee.Humanoid.Health <= 0
                end
            end
        end
    end)
end
