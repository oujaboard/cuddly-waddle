getgenv().MoneyFarmToggled = false
getgenv().Autofarm = false

local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

local Chareee = game:GetService("Players").LocalPlayer.Character
local Mobs = game:GetService("Workspace").Living.Mobs

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Jxereas/UI-Libraries/main/athenic_gui_library.lua", true))()

local window = library:CreateWindow("Kaizen Script by Oujaboard")

local tab = window:CreateTab("Autofarm")

local label = tab:Label("The fuck is a label", {
   BgColor = Color3.fromRGB(20,20,20),
   TextSize = 18,
   TextColor = Color3.fromRGB(255,255,255)
})

label:ChangeText("Kaizen")



local toggle = tab:Toggle("Farm Money (Invis break this + Auto Quest better)", function(bool)
    getgenv().MoneyFarmToggled = bool
    if bool then
        autoFarmCash()
    end
end)
toggle:SetToggle(false)


_G.Table1 = {}
function UDP(--[[Table1]])
    for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
        table.insert(_G.Table1, v.Name)
    end
end
UDP()
print(unpack(_G.Table1))


local invdrpd = tab:Dropdown("Tool Select (For Autofarm)", {unpack(_G.Table1)}, function(selected)
    selectedTool = selected
    print("Dropdown element selected: "..selected)

 end, true) -- Args(<string> Name, <table?> Options, <function?> Callback, <boolean?> ShowNoneOption)





tab:Dropdown("Select Autofarm", {"Bandits | 5+", "Armed Bandits | 15+", "Shrooms | 30+", "Juniors | 45+", "Seniors | 65+", "Fly Heads | 80+", "Fire Shrooms | 110+", "Rogue Sorcerers | 125+", "Crabions | 140+", "Gnashers | 160+"}, function(selected)
    selectedAutoFarm = selected
    print("Dropdown element selected: "..selected)
 end, true) -- Args(<string> Name, <table?> Options, <function?> Callback, <boolean?> ShowNoneOption)



local toggle = tab:Toggle("Autofarm Quest (Select w/ Dropdown)", function(bool)
    getgenv().Autofarm = bool
    if bool then
        if selectedAutoFarm == "Bandits | 5+" and bool then
            autoFarmBandit(selectedTool)
        elseif selectedAutoFarm == "Armed Bandits | 15+" and bool then
            autoFarmArmedBandit(selectedTool)
        elseif selectedAutoFarm == "Shrooms | 30+" and bool then
            autoFarmShroom(selectedTool)
        elseif selectedAutoFarm == "Juniors | 45+" and bool then
            autoFarmJuniors(selectedTool)
        elseif selectedAutoFarm == "Seniors | 65+" and bool then
            autoFarmSeniors(selectedTool)
        elseif selectedAutoFarm == "Fly Heads | 80+" and bool then
            autoFarmFlyHeads(selectedTool)
        elseif selectedAutoFarm == "Fire Shrooms | 110+" and bool then
            autoFarmFireShrooms(selectedTool)
        elseif selectedAutoFarm == "Rogue Sorcerers | 125+" and bool then
            autoFarmRogueSorcerers(selectedTool)
        elseif selectedAutoFarm == "Crabions | 140+" and bool then
            autoFarmCrabions(selectedTool)
        elseif selectedAutoFarm == "Gnashers | 160+" and bool then
            autoFarmGnashers(selectedTool)
        end
    end
end)
toggle:SetToggle(false)


tab:Button("Invisibility (Breaks Autofarms until death)", function()
   local tempPos = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
   task.wait(0.1)
   game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(117.620003, 235.537994, 243.947998, -0.993051589, -3.08575174e-08, -0.117679805, -1.89604723e-08, 1, -1.02216269e-07, 0.117679805, -9.92747644e-08, -0.993051589)
   task.wait(0.5)
   game:GetService("Players").LocalPlayer.Character.LowerTorso.Root:Destroy()
   task.wait(1)
   game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = tempPos
end)




local tab2 = window:CreateTab("Misc")

tab2:Slider("WalkSpeed", 500, function(val)
     while task.wait(0.1) do
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = val
     end
 end)

 tab2:Slider("JumpPower", 500, function(val)
    while task.wait(0.1) do
       game.Players.LocalPlayer.Character.Humanoid.JumpPower = val
    end
end)




local tab3 = window:CreateTab("Credits")

local label1 = tab3:Label("killer91#2425 aka oujaboard on v3rmillion.net", {
    BgColor = Color3.fromRGB(20,20,20),
    TextSize = 18,
    TextColor = Color3.fromRGB(255,255,255)
 }) -- Args(<string> Name, <table?> LabelTraits, <table?> ImageInfo)
 

 label1:ChangeText("killer91#2425 aka oujaboard on v3rmillion.net") -- Args(<string> NewLabelName)



 local label2 = tab3:Label("Big helper Jumble on v3rmillion.net", {
    BgColor = Color3.fromRGB(20,20,20),
    TextSize = 18,
    TextColor = Color3.fromRGB(255,255,255)
 }) -- Args(<string> Name, <table?> LabelTraits, <table?> ImageInfo)
 

 label2:ChangeText("Big helper Jumble on v3rmillion.net")

function autoFarmCash()
    spawn(function()
        while getgenv().MoneyFarmToggled == true do
            task.wait(1)
            
            Chareee.HumanoidRootPart.CFrame = CFrame.new(-264.447815, 155.822479, 427.063385, 0.993763745, 6.16412095e-08, 0.111506008, -6.66409576e-08, 1, 4.11113561e-08, -0.111506008, -4.82858411e-08, 0.993763745)
            
            local args = {[1] = "TreeLogSideQuest"}
            
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))
            task.wait(0.2)
            
            local args = {[1] = "TreeLogSideQuest", [2] = "quest_prompt"}
            
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            task.wait(0.2)
            
            local args = {[1] = "TreeLogSideQuest", [2] = "Yes"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))
            task.wait(0.2)
            
            
            Chareee.HumanoidRootPart.CFrame = CFrame.new(380.789185, 156.51001, -320.064056, -0.0318551399, -8.96111096e-09, 0.999492466, -2.18758101e-09, 1, 8.89593998e-09, -0.999492466, -1.90308924e-09, -0.0318551399)
            task.wait(0.2)
            
            
            local args = {[1] = "TreeLogOtherNPC"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))
            task.wait(0.25)
            
            
            local args = {[1] = "TreeLogOtherNPC", [2] = "bring_back"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            task.wait(0.25)
            
            
            local args = {[1] = "TreeLogOtherNPC", [2] = "Okay"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))
            task.wait(0.25)
            
            Chareee.HumanoidRootPart.CFrame = CFrame.new(-264.447815, 155.822479, 427.063385, 0.993763745, 6.16412095e-08, 0.111506008, -6.66409576e-08, 1, 4.11113561e-08, -0.111506008, -4.82858411e-08, 0.993763745)
            task.wait(0.25)
            
            
            local args = {[1] = "TreeLogSideQuest"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))
            task.wait(0.25)
            
            
            local args = {[1] = "TreeLogSideQuest", [2] = "quest_reward"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            task.wait(0.25)
            
            
            local args = {[1] = "TreeLogSideQuest", [2] = "..."}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))
            task.wait(0.25)

            Chareee.HumanoidRootPart.CFrame = CFrame.new(-457.122192, 388.772766, -534.745667, -0.932645202, 3.74172693e-08, 0.360794902, 5.08153413e-08, 1, 2.76484364e-08, -0.360794902, 4.4120096e-08, -0.932645202)
            task.wait(30)
        end
    end)
end

function attack4Farm(tool2use)
    spawn(function()
        game:GetService("Players").LocalPlayer.Character:WaitForChild(tool2use,9e99):Activate()
    end)
end



local countingKills = 0

function autoFarmShroom(tool2use)
    spawn(function()
        print(tool2use)
        if getgenv().Autofarm == true then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-340, 146, 330)
            wait(0.1)
            local args = {[1] = "ShroomSideQuest", [2] = "begin"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            wait(0.1)
            local args = {[1] = "ShroomSideQuest", [2] = "Shrooms"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
            local args = {[1] = "ShroomSideQuest", [2] = "Confirm"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
        end
        while getgenv().Autofarm == true do
            task.wait()
            local Chareee = game:GetService("Players").LocalPlayer.Character
            local Mobs = game:GetService("Workspace").Living.Mobs
            local player = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart",9e99)

            for i,v in pairs(Mobs:GetChildren()) do
                if v.Name == "Shroom" --[[and v:FindFirstChild("Humanoid").Health > 0]] and getgenv().Autofarm == true and player then
                    if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                        repeat
                            pcall(function()
                                game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[tool2use])
                            end)
                            task.wait()
                            --print(v.Name)
                            Chareee:FindFirstChild("HumanoidRootPart").CFrame = v:FindFirstChild("HumanoidRootPart").CFrame + Vector3.new(0,-5,0) --* CFrame.new(0,5,0)
                                if v.Humanoid.Health <= 0 then
                                    wait(0.1)
                                    countingKills = countingKills + 1
                                    print(countingKills)     
                                    task.wait(0.1)
                                    if countingKills == 5 then
                                        getgenv().Autofarm = false
                                        wait(0.1)
                                        Chareee.HumanoidRootPart.CFrame = CFrame.new(-342.406555, 146.021729, 327.200745, 0.978649437, 3.15471804e-09, -0.205536574, -5.27631139e-09, 1, -9.77412995e-09, 0.205536574, 1.06499218e-08, 0.978649437)
                                        local args = {[1] = "ShroomSideQuest"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "ShroomSideQuest", [2] = "talk"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "ShroomSideQuest", [2] = "Bye"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        countingKills = 0 
                                        print(countingKills)
                                        wait(4)
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-340, 146, 330)
                                        wait(0.1)
                                        local args = {[1] = "ShroomSideQuest", [2] = "begin"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
                                        wait(0.1)
                                        local args = {[1] = "ShroomSideQuest", [2] = "Shrooms"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        local args = {[1] = "ShroomSideQuest", [2] = "Confirm"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        getgenv().Autofarm = true
                                        autoFarmShroom(tool2use)
                                    end
                                end
                                --game:GetService("Players").LocalPlayer.Character[tool2use]:Activate()
                                attack4Farm(tool2use)
                        until v.Humanoid.Health <= 0 or getgenv().Autofarm == false or Chareee.Humanoid.Health <= 0
                    end
                end
            end
        end
    end)
end



function autoFarmBandit(tool2use)
    spawn(function()
        print(tool2use)
        if getgenv().Autofarm == true then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-170.759781, 154.134995, 173.60585, -0.622503459, -2.81734263e-08, -0.782617092, -8.66240768e-08, 1, 3.29028857e-08, 0.782617092, 8.8275641e-08, -0.622503459)
            wait(0.1)
            local args = {[1] = "BanditSideQuest", [2] = "begin"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            wait(0.1)
            local args = {[1] = "BanditSideQuest", [2] = "Bandits"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
            local args = {[1] = "BanditSideQuest", [2] = "Confirm"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
        end
        while getgenv().Autofarm == true do
            task.wait()
            local Chareee = game:GetService("Players").LocalPlayer.Character
            local Mobs = game:GetService("Workspace").Living.Mobs
            local player = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart",9e99)

            for i,v in pairs(Mobs:GetChildren()) do
                if v.Name == "Rogue Bandit" --[[and v:FindFirstChild("Humanoid").Health > 0]] and getgenv().Autofarm == true and player then
                    if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                        repeat
                            pcall(function()
                                game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[tool2use])
                            end)
                            task.wait()
                            --print(v.Name)
                            Chareee:FindFirstChild("HumanoidRootPart").CFrame = v:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0,5,0)
                                if v.Humanoid.Health <= 0 then
                                    wait(0.1)
                                    countingKills = countingKills + 1
                                    print(countingKills)     
                                    task.wait(0.1)
                                    if countingKills == 5 then
                                        getgenv().Autofarm = false
                                        wait(0.1)
                                        Chareee.HumanoidRootPart.CFrame = CFrame.new(-170.759781, 154.134995, 173.60585, -0.622503459, -2.81734263e-08, -0.782617092, -8.66240768e-08, 1, 3.29028857e-08, 0.782617092, 8.8275641e-08, -0.622503459)
                                        local args = {[1] = "BanditSideQuest"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "BanditSideQuest", [2] = "talk"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "BanditSideQuest", [2] = "Bye"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        countingKills = 0 
                                        print(countingKills)
                                        wait(4)
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-170.759781, 154.134995, 173.60585, -0.622503459, -2.81734263e-08, -0.782617092, -8.66240768e-08, 1, 3.29028857e-08, 0.782617092, 8.8275641e-08, -0.622503459)
                                        wait(0.1)
                                        local args = {[1] = "BanditSideQuest", [2] = "begin"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
                                        wait(0.1)
                                        local args = {[1] = "BanditSideQuest", [2] = "Bandits"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        local args = {[1] = "BanditSideQuest", [2] = "Confirm"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        getgenv().Autofarm = true
                                        autoFarmBandit(tool2use)
                                    end
                                end
                                --game:GetService("Players").LocalPlayer.Character[tool2use]:Activate()
                                attack4Farm(tool2use)
                        until v.Humanoid.Health <= 0 or getgenv().Autofarm == false or Chareee.Humanoid.Health <= 0
                    end
                end
            end
        end
    end)
end



function autoFarmArmedBandit(tool2use)
    spawn(function()
        print(tool2use)
        if getgenv().Autofarm == true then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-170.759781, 154.134995, 173.60585, -0.622503459, -2.81734263e-08, -0.782617092, -8.66240768e-08, 1, 3.29028857e-08, 0.782617092, 8.8275641e-08, -0.622503459)
            wait(0.1)
            local args = {[1] = "BanditSideQuest", [2] = "begin"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            wait(0.1)
            local args = {[1] = "BanditSideQuest", [2] = "Armed Bandits"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
            local args = {[1] = "BanditSideQuest", [2] = "Confirm"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
        end
        while getgenv().Autofarm == true do
            task.wait()
            local Chareee = game:GetService("Players").LocalPlayer.Character
            local Mobs = game:GetService("Workspace").Living.Mobs
            local player = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart",9e99)

            for i,v in pairs(Mobs:GetChildren()) do
                if v.Name == "Armed Bandit" --[[and v:FindFirstChild("Humanoid").Health > 0]] and getgenv().Autofarm == true and player then
                    if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                        repeat
                            pcall(function()
                                game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[tool2use])
                            end)
                            task.wait()
                            --print(v.Name)
                            Chareee:FindFirstChild("HumanoidRootPart").CFrame = v:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0,5,0)
                                if v.Humanoid.Health <= 0 then
                                    wait(0.1)
                                    countingKills = countingKills + 1
                                    print(countingKills)     
                                    task.wait(0.1)
                                    if countingKills == 5 then
                                        getgenv().Autofarm = false
                                        wait(0.1)
                                        Chareee.HumanoidRootPart.CFrame = CFrame.new(-170.759781, 154.134995, 173.60585, -0.622503459, -2.81734263e-08, -0.782617092, -8.66240768e-08, 1, 3.29028857e-08, 0.782617092, 8.8275641e-08, -0.622503459)
                                        local args = {[1] = "BanditSideQuest"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "BanditSideQuest", [2] = "talk"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "BanditSideQuest", [2] = "Bye"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        countingKills = 0 
                                        print(countingKills)
                                        wait(4)
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-170.759781, 154.134995, 173.60585, -0.622503459, -2.81734263e-08, -0.782617092, -8.66240768e-08, 1, 3.29028857e-08, 0.782617092, 8.8275641e-08, -0.622503459)
                                        wait(0.1)
                                        local args = {[1] = "BanditSideQuest", [2] = "begin"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
                                        wait(0.1)
                                        local args = {[1] = "BanditSideQuest", [2] = "Armed Bandits"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        local args = {[1] = "BanditSideQuest", [2] = "Confirm"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        getgenv().Autofarm = true
                                        autoFarmArmedBandit(tool2use)
                                    end
                                end
                                --game:GetService("Players").LocalPlayer.Character[tool2use]:Activate()
                                attack4Farm(tool2use)
                        until v.Humanoid.Health <= 0 or getgenv().Autofarm == false or Chareee.Humanoid.Health <= 0
                    end
                end
            end
        end
    end)
end



function autoFarmJuniors(tool2use)
    spawn(function()
        print(tool2use)
        if getgenv().Autofarm == true then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1214.39124, 200.528534, 111.117302, 0.923870921, 3.27921548e-08, 0.382704228, -5.96501621e-08, 1, 5.83136881e-08, -0.382704228, -7.67026904e-08, 0.923870921)
            wait(0.1)
            local args = {[1] = "StudentSideQuest", [2] = "begin"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            wait(0.1)
            local args = {[1] = "StudentSideQuest", [2] = "Juniors"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
            local args = {[1] = "StudentSideQuest", [2] = "Confirm"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
        end
        while getgenv().Autofarm == true do
            task.wait()
            local Chareee = game:GetService("Players").LocalPlayer.Character
            local Mobs = game:GetService("Workspace").Living.Mobs
            local player = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart",9e99)

            for i,v in pairs(Mobs:GetChildren()) do
                if v.Name == "Junior" --[[and v:FindFirstChild("Humanoid").Health > 0]] and getgenv().Autofarm == true and player then
                    if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                        repeat
                            pcall(function()
                                game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[tool2use])
                            end)
                            task.wait()
                            --print(v.Name)
                            Chareee:FindFirstChild("HumanoidRootPart").CFrame = v:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0,5,0)
                                if v.Humanoid.Health <= 0 then
                                    wait(0.1)
                                    countingKills = countingKills + 1
                                    print(countingKills)     
                                    task.wait(0.1)
                                    if countingKills == 5 then
                                        getgenv().Autofarm = false
                                        wait(0.1)
                                        Chareee.HumanoidRootPart.CFrame = CFrame.new(1214.39124, 200.528534, 111.117302, 0.923870921, 3.27921548e-08, 0.382704228, -5.96501621e-08, 1, 5.83136881e-08, -0.382704228, -7.67026904e-08, 0.923870921)
                                        local args = {[1] = "StudentSideQuest"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "StudentSideQuest", [2] = "talk"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "StudentSideQuest", [2] = "Bye"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        countingKills = 0 
                                        print(countingKills)
                                        wait(4)
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1214.39124, 200.528534, 111.117302, 0.923870921, 3.27921548e-08, 0.382704228, -5.96501621e-08, 1, 5.83136881e-08, -0.382704228, -7.67026904e-08, 0.923870921)
                                        wait(0.1)
                                        local args = {[1] = "StudentSideQuest", [2] = "begin"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
                                        wait(0.1)
                                        local args = {[1] = "StudentSideQuest", [2] = "Juniors"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        local args = {[1] = "StudentSideQuest", [2] = "Confirm"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        getgenv().Autofarm = true
                                        autoFarmJuniors(tool2use)
                                    end
                                end
                                --game:GetService("Players").LocalPlayer.Character[tool2use]:Activate()
                                attack4Farm(tool2use)
                        until v.Humanoid.Health <= 0 or getgenv().Autofarm == false or Chareee.Humanoid.Health <= 0
                    end
                end
            end
        end
    end)
end



function autoFarmSeniors(tool2use)
    spawn(function()
        print(tool2use)
        if getgenv().Autofarm == true then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1214.39124, 200.528534, 111.117302, 0.923870921, 3.27921548e-08, 0.382704228, -5.96501621e-08, 1, 5.83136881e-08, -0.382704228, -7.67026904e-08, 0.923870921)
            wait(0.1)
            local args = {[1] = "StudentSideQuest", [2] = "begin"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            wait(0.1)
            local args = {[1] = "StudentSideQuest", [2] = "Seniors"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
            local args = {[1] = "StudentSideQuest", [2] = "Confirm"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
        end
        while getgenv().Autofarm == true do
            task.wait()
            local Chareee = game:GetService("Players").LocalPlayer.Character
            local Mobs = game:GetService("Workspace").Living.Mobs
            local player = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart",9e99)

            for i,v in pairs(Mobs:GetChildren()) do
                if v.Name == "Senior" --[[and v:FindFirstChild("Humanoid").Health > 0]] and getgenv().Autofarm == true and player then
                    if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                        repeat
                            pcall(function()
                                game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[tool2use])
                            end)
                            task.wait()
                            --print(v.Name)
                            Chareee:FindFirstChild("HumanoidRootPart").CFrame = v:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0,5,0)
                                if v.Humanoid.Health <= 0 then
                                    wait(0.1)
                                    countingKills = countingKills + 1
                                    print(countingKills)     
                                    task.wait(0.1)
                                    if countingKills == 5 then
                                        getgenv().Autofarm = false
                                        wait(0.1)
                                        Chareee.HumanoidRootPart.CFrame = CFrame.new(1214.39124, 200.528534, 111.117302, 0.923870921, 3.27921548e-08, 0.382704228, -5.96501621e-08, 1, 5.83136881e-08, -0.382704228, -7.67026904e-08, 0.923870921)
                                        local args = {[1] = "StudentSideQuest"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "StudentSideQuest", [2] = "talk"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "StudentSideQuest", [2] = "Bye"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        countingKills = 0 
                                        print(countingKills)
                                        wait(4)
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1214.39124, 200.528534, 111.117302, 0.923870921, 3.27921548e-08, 0.382704228, -5.96501621e-08, 1, 5.83136881e-08, -0.382704228, -7.67026904e-08, 0.923870921)
                                        wait(0.1)
                                        local args = {[1] = "StudentSideQuest", [2] = "begin"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
                                        wait(0.1)
                                        local args = {[1] = "StudentSideQuest", [2] = "Seniors"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        local args = {[1] = "StudentSideQuest", [2] = "Confirm"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        getgenv().Autofarm = true
                                        autoFarmSeniors(tool2use)
                                    end
                                end
                                --game:GetService("Players").LocalPlayer.Character[tool2use]:Activate()
                                attack4Farm(tool2use)
                        until v.Humanoid.Health <= 0 or getgenv().Autofarm == false or Chareee.Humanoid.Health <= 0
                    end
                end
            end
        end
    end)
end



function autoFarmFlyHeads(tool2use)
    spawn(function()
        print(tool2use)
        if getgenv().Autofarm == true then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(984.453979, 197.05983, 149.660172, 0.670953333, 0.00534128677, 0.74148035, -0.0108450074, 0.999937773, 0.00261037191, -0.741420269, -0.0097927982, 0.670969486)
            wait(0.1)
            local args = {[1] = "EnrolmentCurseQuest", [2] = "begin"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            wait(0.1)
            local args = {[1] = "EnrolmentCurseQuest", [2] = "Fly Heads"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
            local args = {[1] = "EnrolmentCurseQuest", [2] = "Confirm"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
        end
        while getgenv().Autofarm == true do
            task.wait()
            local Chareee = game:GetService("Players").LocalPlayer.Character
            local Mobs = game:GetService("Workspace").Living.Mobs
            local player = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart",9e99)

            for i,v in pairs(Mobs:GetChildren()) do
                if v.Name == "Fly Head" --[[and v:FindFirstChild("Humanoid").Health > 0]] and getgenv().Autofarm == true and player then
                    if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                        repeat
                            pcall(function()
                                game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[tool2use])
                            end)
                            task.wait()
                            --print(v.Name)
                            Chareee:FindFirstChild("HumanoidRootPart").CFrame = v:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0,5,0)
                                if v.Humanoid.Health <= 0 then
                                    wait(0.1)
                                    countingKills = countingKills + 1
                                    print(countingKills)     
                                    task.wait(0.1)
                                    if countingKills == 5 then
                                        getgenv().Autofarm = false
                                        wait(0.1)
                                        Chareee.HumanoidRootPart.CFrame = CFrame.new(984.453979, 197.05983, 149.660172, 0.670953333, 0.00534128677, 0.74148035, -0.0108450074, 0.999937773, 0.00261037191, -0.741420269, -0.0097927982, 0.670969486)
                                        local args = {[1] = "EnrolmentCurseQuest"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "EnrolmentCurseQuest", [2] = "talk"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "EnrolmentCurseQuest", [2] = "Bye"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        countingKills = 0 
                                        print(countingKills)
                                        wait(4)
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(984.453979, 197.05983, 149.660172, 0.670953333, 0.00534128677, 0.74148035, -0.0108450074, 0.999937773, 0.00261037191, -0.741420269, -0.0097927982, 0.670969486)
                                        wait(0.1)
                                        local args = {[1] = "EnrolmentCurseQuest", [2] = "begin"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
                                        wait(0.1)
                                        local args = {[1] = "EnrolmentCurseQuest", [2] = "Fly Heads"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        local args = {[1] = "EnrolmentCurseQuest", [2] = "Confirm"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        getgenv().Autofarm = true
                                        autoFarmFlyHeads(tool2use)
                                    end
                                end
                                --game:GetService("Players").LocalPlayer.Character[tool2use]:Activate()
                                attack4Farm(tool2use)
                        until v.Humanoid.Health <= 0 or getgenv().Autofarm == false or Chareee.Humanoid.Health <= 0
                    end
                end
            end
        end
    end)
end



function autoFarmFireShrooms(tool2use)
    spawn(function()
        print(tool2use)
        if getgenv().Autofarm == true then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(984.453979, 197.05983, 149.660172, 0.670953333, 0.00534128677, 0.74148035, -0.0108450074, 0.999937773, 0.00261037191, -0.741420269, -0.0097927982, 0.670969486)
            wait(0.1)
            local args = {[1] = "EnrolmentCurseQuest", [2] = "begin"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            wait(0.1)
            local args = {[1] = "EnrolmentCurseQuest", [2] = "Fire Shrooms"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
            local args = {[1] = "EnrolmentCurseQuest", [2] = "Confirm"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
        end
        while getgenv().Autofarm == true do
            task.wait()
            local Chareee = game:GetService("Players").LocalPlayer.Character
            local Mobs = game:GetService("Workspace").Living.Mobs
            local player = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart",9e99)

            for i,v in pairs(Mobs:GetChildren()) do
                if v.Name == "Fire Shroom" --[[and v:FindFirstChild("Humanoid").Health > 0]] and getgenv().Autofarm == true and player then
                    if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                        repeat
                            pcall(function()
                                game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[tool2use])
                            end)
                            task.wait()
                            --print(v.Name)
                            Chareee:FindFirstChild("HumanoidRootPart").CFrame = v:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0,5,0)
                                if v.Humanoid.Health <= 0 then
                                    wait(0.1)
                                    countingKills = countingKills + 1
                                    print(countingKills)     
                                    task.wait(0.1)
                                    if countingKills == 5 then
                                        getgenv().Autofarm = false
                                        wait(0.1)
                                        Chareee.HumanoidRootPart.CFrame = CFrame.new(984.453979, 197.05983, 149.660172, 0.670953333, 0.00534128677, 0.74148035, -0.0108450074, 0.999937773, 0.00261037191, -0.741420269, -0.0097927982, 0.670969486)
                                        local args = {[1] = "EnrolmentCurseQuest"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "EnrolmentCurseQuest", [2] = "talk"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "EnrolmentCurseQuest", [2] = "Bye"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        countingKills = 0 
                                        print(countingKills)
                                        wait(4)
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(984.453979, 197.05983, 149.660172, 0.670953333, 0.00534128677, 0.74148035, -0.0108450074, 0.999937773, 0.00261037191, -0.741420269, -0.0097927982, 0.670969486)
                                        wait(0.1)
                                        local args = {[1] = "EnrolmentCurseQuest", [2] = "begin"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
                                        wait(0.1)
                                        local args = {[1] = "EnrolmentCurseQuest", [2] = "Fire Shrooms"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        local args = {[1] = "EnrolmentCurseQuest", [2] = "Confirm"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        getgenv().Autofarm = true
                                        autoFarmFireShrooms(tool2use)
                                    end
                                end
                                --game:GetService("Players").LocalPlayer.Character[tool2use]:Activate()
                                attack4Farm(tool2use)
                        until v.Humanoid.Health <= 0 or getgenv().Autofarm == false or Chareee.Humanoid.Health <= 0
                    end
                end
            end
        end
    end)
end



function autoFarmRogueSorcerers(tool2use)
    spawn(function()
        print(tool2use)
        if getgenv().Autofarm == true then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(186.505981, 118.803177, -865.584656, -0.258913308, -9.3866575e-08, -0.96590054, 9.50332479e-10, 1, -9.74351124e-08, 0.96590054, -2.61451731e-08, -0.258913308)
            wait(0.1)
            local args = {[1] = "MidoriPrimarySideQuests", [2] = "begin"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            wait(0.1)
            local args = {[1] = "MidoriPrimarySideQuests", [2] = "Rogue Sorcerers"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
            local args = {[1] = "MidoriPrimarySideQuests", [2] = "Confirm"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
        end
        while getgenv().Autofarm == true do
            task.wait()
            local Chareee = game:GetService("Players").LocalPlayer.Character
            local Mobs = game:GetService("Workspace").Living.Mobs
            local player = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart",9e99)

            for i,v in pairs(Mobs:GetChildren()) do
                if v.Name == "Rogue Sorcerer" --[[and v:FindFirstChild("Humanoid").Health > 0]] and getgenv().Autofarm == true and player then
                    if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                        repeat
                            pcall(function()
                                game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[tool2use])
                            end)
                            task.wait()
                            --print(v.Name)
                            Chareee:FindFirstChild("HumanoidRootPart").CFrame = v:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0,5,0)
                                if v.Humanoid.Health <= 0 then
                                    wait(0.1)
                                    countingKills = countingKills + 1
                                    print(countingKills)     
                                    task.wait(0.1)
                                    if countingKills == 5 then
                                        getgenv().Autofarm = false
                                        wait(0.1)
                                        Chareee.HumanoidRootPart.CFrame = CFrame.new(186.505981, 118.803177, -865.584656, -0.258913308, -9.3866575e-08, -0.96590054, 9.50332479e-10, 1, -9.74351124e-08, 0.96590054, -2.61451731e-08, -0.258913308)
                                        local args = {[1] = "MidoriPrimarySideQuests"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "talk"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "Bye"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        countingKills = 0 
                                        print(countingKills)
                                        wait(4)
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(186.505981, 118.803177, -865.584656, -0.258913308, -9.3866575e-08, -0.96590054, 9.50332479e-10, 1, -9.74351124e-08, 0.96590054, -2.61451731e-08, -0.258913308)
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "begin"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "Rogue Sorcerers"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "Confirm"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        getgenv().Autofarm = true
                                        autoFarmRogueSorcerers(tool2use)
                                    end
                                end
                                --game:GetService("Players").LocalPlayer.Character[tool2use]:Activate()
                                attack4Farm(tool2use)
                        until v.Humanoid.Health <= 0 or getgenv().Autofarm == false or Chareee.Humanoid.Health <= 0
                    end
                end
            end
        end
    end)
end



function autoFarmCrabions(tool2use)
    spawn(function()
        print(tool2use)
        if getgenv().Autofarm == true then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(186.505981, 118.803177, -865.584656, -0.258913308, -9.3866575e-08, -0.96590054, 9.50332479e-10, 1, -9.74351124e-08, 0.96590054, -2.61451731e-08, -0.258913308)
            wait(0.1)
            local args = {[1] = "MidoriPrimarySideQuests", [2] = "begin"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            wait(0.1)
            local args = {[1] = "MidoriPrimarySideQuests", [2] = "Crabions"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
            local args = {[1] = "MidoriPrimarySideQuests", [2] = "Confirm"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
        end
        while getgenv().Autofarm == true do
            task.wait()
            local Chareee = game:GetService("Players").LocalPlayer.Character
            local Mobs = game:GetService("Workspace").Living.Mobs
            local player = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart",9e99)

            for i,v in pairs(Mobs:GetChildren()) do
                if v.Name == "Crabion" --[[and v:FindFirstChild("Humanoid").Health > 0]] and getgenv().Autofarm == true and player then
                    if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                        repeat
                            pcall(function()
                                game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[tool2use])
                            end)
                            task.wait()
                            --print(v.Name)
                            Chareee:FindFirstChild("HumanoidRootPart").CFrame = v:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0,5,0)
                                if v.Humanoid.Health <= 0 then
                                    wait(0.1)
                                    countingKills = countingKills + 1
                                    print(countingKills)     
                                    task.wait(0.1)
                                    if countingKills == 5 then
                                        getgenv().Autofarm = false
                                        wait(0.1)
                                        Chareee.HumanoidRootPart.CFrame = CFrame.new(186.505981, 118.803177, -865.584656, -0.258913308, -9.3866575e-08, -0.96590054, 9.50332479e-10, 1, -9.74351124e-08, 0.96590054, -2.61451731e-08, -0.258913308)
                                        local args = {[1] = "MidoriPrimarySideQuests"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "talk"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "Bye"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        countingKills = 0 
                                        print(countingKills)
                                        wait(4)
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(186.505981, 118.803177, -865.584656, -0.258913308, -9.3866575e-08, -0.96590054, 9.50332479e-10, 1, -9.74351124e-08, 0.96590054, -2.61451731e-08, -0.258913308)
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "begin"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "Crabions"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "Confirm"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        getgenv().Autofarm = true
                                        autoFarmCrabions(tool2use)
                                    end
                                end
                                --game:GetService("Players").LocalPlayer.Character[tool2use]:Activate()
                                attack4Farm(tool2use)
                        until v.Humanoid.Health <= 0 or getgenv().Autofarm == false or Chareee.Humanoid.Health <= 0
                    end
                end
            end
        end
    end)
end



function autoFarmGnashers(tool2use)
    spawn(function()
        print(tool2use)
        if getgenv().Autofarm == true then
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(186.505981, 118.803177, -865.584656, -0.258913308, -9.3866575e-08, -0.96590054, 9.50332479e-10, 1, -9.74351124e-08, 0.96590054, -2.61451731e-08, -0.258913308)
            wait(0.1)
            local args = {[1] = "MidoriPrimarySideQuests", [2] = "begin"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
            wait(0.1)
            local args = {[1] = "MidoriPrimarySideQuests", [2] = "Gnashers"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
            local args = {[1] = "MidoriPrimarySideQuests", [2] = "Confirm"}
            game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
            wait(0.1)
        end
        while getgenv().Autofarm == true do
            task.wait()
            local Chareee = game:GetService("Players").LocalPlayer.Character
            local Mobs = game:GetService("Workspace").Living.Mobs
            local player = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart",9e99)

            for i,v in pairs(Mobs:GetChildren()) do
                if v.Name == "Gnasher" --[[and v:FindFirstChild("Humanoid").Health > 0]] and getgenv().Autofarm == true and player then
                    if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                        repeat
                            pcall(function()
                                game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[tool2use])
                            end)
                            task.wait()
                            --print(v.Name)
                            Chareee:FindFirstChild("HumanoidRootPart").CFrame = v:FindFirstChild("HumanoidRootPart").CFrame + Vector3.new(0,-5,0) --* CFrame.new(0,5,0)
                                if v.Humanoid.Health <= 0 then
                                    wait(0.1)
                                    countingKills = countingKills + 1
                                    print(countingKills)     
                                    task.wait(0.1)
                                    if countingKills == 5 then
                                        getgenv().Autofarm = false
                                        wait(0.1)
                                        Chareee.HumanoidRootPart.CFrame = CFrame.new(186.505981, 118.803177, -865.584656, -0.258913308, -9.3866575e-08, -0.96590054, 9.50332479e-10, 1, -9.74351124e-08, 0.96590054, -2.61451731e-08, -0.258913308)
                                        local args = {[1] = "MidoriPrimarySideQuests"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetInitFunction:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "talk"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "Bye"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))                                
                                        wait(0.1)
                                        countingKills = 0 
                                        print(countingKills)
                                        wait(4)
                                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(186.505981, 118.803177, -865.584656, -0.258913308, -9.3866575e-08, -0.96590054, 9.50332479e-10, 1, -9.74351124e-08, 0.96590054, -2.61451731e-08, -0.258913308)
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "begin"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetDialogue:InvokeServer(unpack(args))
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "Gnashers"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        local args = {[1] = "MidoriPrimarySideQuests", [2] = "Confirm"}
                                        game:GetService("ReplicatedStorage").Knit.Services.interactService.RF.GetOptionData:InvokeServer(unpack(args))        
                                        wait(0.1)
                                        getgenv().Autofarm = true
                                        autoFarmGnashers(tool2use)
                                    end
                                end
                                --game:GetService("Players").LocalPlayer.Character[tool2use]:Activate()
                                attack4Farm(tool2use)
                        until v.Humanoid.Health <= 0 or getgenv().Autofarm == false or Chareee.Humanoid.Health <= 0
                    end
                end
            end
        end
    end)
end
